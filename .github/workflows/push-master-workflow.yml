name: Nuget Package Deploy

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Continuous Integration
    runs-on: ubuntu-18.04
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v2.0.0
        with:
          fetch-depth: 0

      - name: Fetch tags
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

      - name: Run GitVersion
        uses: docker://gittools/gitversion:5.1.4-linux
        with:
          args: -output buildserver -nocache

      # Optional step, add only for a specific dotnet version that doesn't come with ubuntu-latest / windows-latest
      # Visit bit.ly/2synnZl for a list of software that comes pre-installed with ubuntu-latest / windows-latest
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.100'

      - name: Disable .Net Welcome
        run: touch "$HOME/.dotnet/$(dotnet --version).dotnetFirstUseSentinel"

      - name: Install SonarCloud scanner
        run: |
          dotnet tool install --global dotnet-sonarscanner --version 4.8.0
          echo "::set-env name=PATH::${PATH}:${HOME}/.dotnet/tools"

      - name: Start SonarCloud Scan
        run: dotnet sonarscanner begin /k:"magne_dfalex.net" /o:"magne"
              /v:$GitVersion_Major.$GitVersion_Minor
              /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
              /d:sonar.host.url="https://sonarcloud.io"
              /d:sonar.cs.opencover.reportsPaths=**/TestResults/**/coverage.opencover.xml
              /d:sonar.cs.vstest.reportsPaths=**/TestResults/*.trx

      - name: Build
        run: dotnet build --configuration Release dfalex.sln

      - name: Test
        run: dotnet test --configuration Release --no-build --logger trx --collect:"XPlat Code Coverage" --settings coverletArgs.runsettings dfalex.sln

      - name: End SonarCloud Scan
        run: dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    name: Deploy Nuget Package
    needs: build
    runs-on: ubuntu-18.04
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v2.0.0
        with:
          fetch-depth: 0

      - name: Fetch tags
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

      - name: Run GitVersion
        uses: docker://gittools/gitversion:5.1.4-linux
        with:
          args: -output buildserver -nocache

      # Optional step, add only for a specific dotnet version that doesn't come with ubuntu-latest / windows-latest
      # Visit bit.ly/2synnZl for a list of software that comes pre-installed with ubuntu-latest / windows-latest
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.100'

      - name: Disable .Net Welcome
        run: touch "$HOME/.dotnet/$(dotnet --version).dotnetFirstUseSentinel"

      - name: Pack nuget package
        run: dotnet pack --configuration Release --version-suffix prerelease-$(date +%Y%m%d%H%M%S) dfalex.sln

      - name: Push package to nuget.org
        run: dotnet nuget push **/*.nupkg
              --api-key ${{ secrets.NUGET_DEPLOY_KEY }}
              --source https://api.nuget.org/v3/index.json
